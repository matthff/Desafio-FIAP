services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: desafio-fiap-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD}
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "${SA_PASSWORD}" -C -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - desafio-network

  sqlserver-init:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: desafio-fiap-sqlserver-init
    depends_on:
      sqlserver:
        condition: service_healthy
    volumes:
      - ./database/dump.sql:/dump.sql
    environment:
      - SA_PASSWORD=${SA_PASSWORD}
    entrypoint: >
      /bin/bash -c "
      echo 'Aguardando SQL Server estar pronto...' &&
      sleep 5 &&
      /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P ${SA_PASSWORD} -C -i /dump.sql &&
      echo 'Banco de dados inicializado com sucesso!' ||
      echo 'Erro ao inicializar banco de dados!'
      "
    networks:
      - desafio-network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: desafio-fiap-api
    depends_on:
      sqlserver:
        condition: service_healthy
      sqlserver-init:
        condition: service_completed_successfully
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - DB_PROVIDER=SQLSERVER
      - DB_CONNECTION_STRING=Server=sqlserver,1433;Database=FIAPSecretaria;User Id=sa;Password=${SA_PASSWORD};TrustServerCertificate=True;
    ports:
      - "5000:8080"
    restart: unless-stopped
    networks:
      - desafio-network

volumes:
  sqlserver_data:
    driver: local

networks:
  desafio-network:
    driver: bridge
